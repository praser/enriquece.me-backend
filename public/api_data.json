[  {    "description": "<p>To manage their finance the users should split them in different accounts. This end point is about account types. All accounts have an proper type like salary, investments, chain account and a lot of others. If you want to know all the types of account that exists in the system this is the right place. You just need send a get request like described below.</p>",    "version": "1.0.0",    "type": "get",    "url": "/v1/account_types",    "title": "List account types",    "name": "GetAccountTypes",    "group": "AccountTypes",    "permission": [      {        "name": "authenticated users only"      }    ],    "examples": [      {        "title": "Wanting to see that example that cheers your laziness?",        "content": "In case of memory lapse, remember that this is an example and you have to\nreplace the <token> key and the values in JSON as well.\n\ncurl -i\n-H 'CONTENT-TYPE: application/json'\n-H 'AUTHORIZATION: Bearer <token>'\nhttps://api.enriquece.me/account_types",        "type": "curl"      }    ],    "success": {      "examples": [        {          "title": "Here is an example of response when everithing is ok",          "content": "If you did everithing right congratulatuons! Your response must look like the\none bellow:\n\nHTTP/1.1 200 OK\n{\n  \"data\": [\n    {\n      \"id\": \"5984ea08943f620004eb3375\",\n      \"type\": \"account-type\",\n      \"attributes\": {\n        \"name\": \"Conta corrente\"\n      }\n    }\n  ]\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "data",            "description": ""          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "data.id",            "description": "<p>Id of object in database</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "data.type",            "description": "<p>Describes the type of object</p>"          },          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "data.attributes",            "description": "<p>List attributes of an object</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "data.attributes.name",            "description": "<p>Name of the account type</p>"          }        ]      }    },    "filename": "app/controllers/v1/account_types_controller.rb",    "groupTitle": "AccountTypes",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "string",            "optional": false,            "field": "content-type",            "description": "<p>The content type of request. Must always be filled with 'application/json'</p>"          },          {            "group": "Header",            "type": "string",            "optional": false,            "field": "Authorization",            "description": "<p>Authentication token of current user</p>"          }        ]      },      "examples": [        {          "title": "If you need an example of header, here you have it.",          "content": "Content-Type: application/json Authorization: Bearer <token>",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "json",            "optional": false,            "field": "unauthorized",            "description": "<p>Authorization token is invalid, not provided or your access to this resource is not allowed.</p>"          }        ]      },      "examples": [        {          "title": "401 - Unauthorized error response body:",          "content": "HTTP/1.1 401 Unauthorized\n{\n  \"errors\": [\n    {\n      \"source\": {\n        \"pointer\": \"/data/attributes/<object>\"\n      },\n      \"detail\": \"Not Authorized\"\n    }\n  ]\n}",          "type": "json"        }      ]    }  },  {    "description": "<p>In the real world financial transactions take place between accounts. An account can be your wallet, a bank account or anything else that allows people to transact money between them. Knowing that, this is the end point where users can create virtual accounts to handle their transactions. The proccess of creating an account is simple and well documented as anything else in here. You just need to submit a post request as described below.</p>",    "version": "1.0.0",    "type": "post",    "url": "/v1/accounts",    "title": "Create account",    "name": "CreateAccount",    "group": "Accounts",    "permission": [      {        "name": "authenticated users only"      }    ],    "examples": [      {        "title": "I know, you want to see an example use right? Here it is!",        "content": "Are you seeing the <token> down there? You already know that you need to\nreplace it with a valid authentication token, right? Still do not know what\nthe authentication token is? It's taking a while to see our authentication\nsection. Believe me, you're going to need it a lot.\n\ncurl -i\n-X POST\n-d '{\n      \"name\": \"Nova conta\",\n      \"description\": \"Minha nova conta\",\n      \"initial_balance\": 30,\n      \"bank_id\": \"5984ea08943f620004eb335f\",\n      \"account_type_id\": \"5984ea08943f620004eb3375\"\n    }'\n-H 'CONTENT-TYPE: application/json'\n-H 'AUTHORIZATION: Bearer <token>'\nhttps://api.enriquece.me/accounts",        "type": "curl"      }    ],    "filename": "app/controllers/v1/accounts_controller.rb",    "groupTitle": "Accounts",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "size": "1..100",            "optional": false,            "field": "name",            "description": "<p>A short name to your virtual account</p>"          },          {            "group": "Parameter",            "type": "String",            "size": "..500",            "optional": true,            "field": "description",            "description": "<p>A description to your virutal account</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "initial_balance",            "description": "<p>Starting balance of the virtual account</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "bank_id",            "description": "<p>Bank id. This field must be filled with an existing bank id. To see how to obtain this value take a look at our banks section.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "account_type_id",            "description": "<p>This field must be filled with an existing accoint type id. To see how to obtain this value take a look at our accounts types serction.</p>"          }        ]      },      "examples": [        {          "title": "Request body example",          "content": "You're getting badly used, aren't you? Of course we have an example of the\nrequest body for you to take a look at. Go ahead!\n\n{\n  \"name\": \"Nova conta\",\n  \"description\": \"Minha nova conta\",\n  \"initial_balance\": 30,\n  \"bank_id\": \"5984ea08943f620004eb335f\",\n  \"account_type_id\": \"5984ea08943f620004eb3375\"\n}",          "type": "json"        }      ]    },    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "string",            "optional": false,            "field": "content-type",            "description": "<p>The content type of request. Must always be filled with 'application/json'</p>"          },          {            "group": "Header",            "type": "string",            "optional": false,            "field": "Authorization",            "description": "<p>Authentication token of current user</p>"          }        ]      },      "examples": [        {          "title": "If you need an example of header, here you have it.",          "content": "Content-Type: application/json Authorization: Bearer <token>",          "type": "json"        }      ]    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "data",            "description": ""          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "data.id",            "description": "<p>Id of object in database</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "data.type",            "description": "<p>Describes the type of object</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "data.attributes.name",            "description": "<p>Account's name</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "data.attributes.description",            "description": "<p>Accounts's description</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "data.attributes.initial-balance",            "description": "<p>Account opening balance</p>"          }        ]      },      "examples": [        {          "title": "Success response body:",          "content": "HTTP/1.1 200 OK\n{\n  \"data\": {\n    \"id\": \"5984ea9f562a20000468442f\",\n    \"type\": \"account\",\n    \"attributes\": {\n      \"name\": \"Nova conta\",\n      \"description\": \"Minha nova conta\",\n      \"initial-balance\": 30\n    },\n    \"relationships\": {\n      \"bank\": {\n        \"data\": {\n          \"id\": \"5984ea08943f620004eb335f\",\n          \"type\": \"banks\"\n        }\n      },\n      \"account-type\": {\n        \"data\": {\n            \"id\": \"5984ea08943f620004eb3375\",\n            \"type\": \"account-types\"\n        }\n      }\n    }\n  },\n  \"included\": [\n    {\n      \"id\": \"5984ea08943f620004eb335f\",\n      \"type\": \"bank\",\n      \"attributes\": {\n        \"name\": \"Banco do Brasil S.A.\",\n        \"code\": 1\n      }\n    },\n    {\n      \"id\": \"5984ea08943f620004eb3375\",\n      \"type\": \"account-type\",\n      \"attributes\": {\n        \"name\": \"Conta corrente\"\n      }\n    }\n  ]\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "json",            "optional": false,            "field": "unauthorized",            "description": "<p>Authorization token is invalid, not provided or your access to this resource is not allowed.</p>"          },          {            "group": "Error 4xx",            "type": "json",            "optional": false,            "field": "unprocessable-entity",            "description": "<p>Params providaded in request body are invalid or supressed</p>"          }        ]      },      "examples": [        {          "title": "401 - Unauthorized error response body:",          "content": "HTTP/1.1 401 Unauthorized\n{\n  \"errors\": [\n    {\n      \"source\": {\n        \"pointer\": \"/data/attributes/<object>\"\n      },\n      \"detail\": \"Not Authorized\"\n    }\n  ]\n}",          "type": "json"        },        {          "title": "422 - Unprocessible Entity error response body:",          "content": "HTTP/1.1 422 Unprocessable Entity\n{\n  \"errors\": [\n    {\n      \"source\": {\n        \"pointer\": \"/data/attributes/<object>\"\n      },\n      \"detail\": \"<error message>\"\n    }\n  ]\n}",          "type": "json"        }      ]    }  },  {    "description": "<p>At all times bank accounts are opened and closed. Just like in the real world here you can delete an existing account. Go ahead, lets see how to do it.</p>",    "version": "1.0.0",    "type": "delete",    "url": "/v1/accounts/:id",    "title": "Delete account",    "name": "DeleteAccount",    "group": "Accounts",    "permission": [      {        "name": "authenticated users only"      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "Id",            "description": "<p>Account id</p>"          }        ]      }    },    "examples": [      {        "title": "Let's see hoe to do it!:",        "content": "Replace the <token> with a valid one. Take a look at our authentication\nsection to get some help.\n\ncurl -i\n-X DELETE\n-H 'CONTENT-TYPE: application/json'\n-H 'AUTHORIZATION: Bearer <token>'\nhttps://api.enriquece.me/accounts/5984ea9f562a20000468442f",        "type": "curl"      }    ],    "success": {      "examples": [        {          "title": "204 No content",          "content": "Bye bye account and that is all. Realy simple no?\n\nHTTP/1.1 204 No Content",          "type": "json"        }      ]    },    "filename": "app/controllers/v1/accounts_controller.rb",    "groupTitle": "Accounts",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "string",            "optional": false,            "field": "content-type",            "description": "<p>The content type of request. Must always be filled with 'application/json'</p>"          },          {            "group": "Header",            "type": "string",            "optional": false,            "field": "Authorization",            "description": "<p>Authentication token of current user</p>"          }        ]      },      "examples": [        {          "title": "If you need an example of header, here you have it.",          "content": "Content-Type: application/json Authorization: Bearer <token>",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "json",            "optional": false,            "field": "unauthorized",            "description": "<p>Authorization token is invalid, not provided or your access to this resource is not allowed.</p>"          }        ]      },      "examples": [        {          "title": "401 - Unauthorized error response body:",          "content": "HTTP/1.1 401 Unauthorized\n{\n  \"errors\": [\n    {\n      \"source\": {\n        \"pointer\": \"/data/attributes/<object>\"\n      },\n      \"detail\": \"Not Authorized\"\n    }\n  ]\n}",          "type": "json"        }      ]    }  },  {    "description": "<p>Needing a list of all your accounts? You are in the right place! Let's go baby.</p>",    "version": "1.0.0",    "type": "get",    "url": "/v1/accounts",    "title": "List accounts",    "name": "ListAccounts",    "group": "Accounts",    "permission": [      {        "name": "authenticated users only"      }    ],    "examples": [      {        "title": "That classic example of usage:",        "content": "Remember to replace <token> with a valid authentication token.\n\ncurl -i\n-H 'CONTENT-TYPE: application/json'\n-H 'AUTHORIZATION: Bearer <token>'\nhttps://api.enriquece.me/accounts",        "type": "curl"      }    ],    "success": {      "examples": [        {          "title": "Success response body:",          "content": "HTTP/1.1 200 OK\n{\n  \"data\": [\n    {\n      \"id\": \"5984ea9f562a20000468442f\",\n      \"type\": \"account\",\n      \"attributes\": {\n        \"name\": \"Nova conta\",\n        \"description\": \"Minha nova conta\",\n        \"initial-balance\": 30\n      },\n      \"relationships\": {\n        \"bank\": {\n          \"data\": {\n            \"id\": \"5984ea08943f620004eb335f\",\n            \"type\": \"banks\"\n          }\n        },\n        \"account-type\": {\n          \"data\": {\n            \"id\": \"5984ea08943f620004eb3375\",\n              \"type\": \"account-types\"\n            }\n          }\n        }\n      },\n    }\n  ],\n  \"included\": [\n    {\n      \"id\": \"5984ea08943f620004eb335f\",\n      \"type\": \"bank\",\n      \"attributes\": {\n        \"name\": \"Banco do Brasil S.A.\",\n        \"code\": 1\n      }\n    },\n    {\n      \"id\": \"5984ea08943f620004eb3375\",\n      \"type\": \"account-type\",\n      \"attributes\": {\n        \"name\": \"Conta corrente\"\n      }\n    }\n  ]\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "data",            "description": ""          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "data.id",            "description": "<p>Id of object in database</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "data.type",            "description": "<p>Describes the type of object</p>"          },          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "data.attributes",            "description": "<p>List attributes of an object</p>"          },          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "included",            "description": "<p>Array of objects with relationship data</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "included.id",            "description": "<p>Id of related object in database</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "included.type",            "description": "<p>Describes the type realted of object</p>"          },          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "included.attributes",            "description": "<p>List attributes of a related object</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "data.attributes.name",            "description": "<p>Account's name</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "data.attributes.description",            "description": "<p>Accounts's description</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "data.attributes.initial-balance",            "description": "<p>Account opening balance</p>"          }        ]      }    },    "filename": "app/controllers/v1/accounts_controller.rb",    "groupTitle": "Accounts",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "string",            "optional": false,            "field": "content-type",            "description": "<p>The content type of request. Must always be filled with 'application/json'</p>"          },          {            "group": "Header",            "type": "string",            "optional": false,            "field": "Authorization",            "description": "<p>Authentication token of current user</p>"          }        ]      },      "examples": [        {          "title": "If you need an example of header, here you have it.",          "content": "Content-Type: application/json Authorization: Bearer <token>",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "json",            "optional": false,            "field": "unauthorized",            "description": "<p>Authorization token is invalid, not provided or your access to this resource is not allowed.</p>"          }        ]      },      "examples": [        {          "title": "401 - Unauthorized error response body:",          "content": "HTTP/1.1 401 Unauthorized\n{\n  \"errors\": [\n    {\n      \"source\": {\n        \"pointer\": \"/data/attributes/<object>\"\n      },\n      \"detail\": \"Not Authorized\"\n    }\n  ]\n}",          "type": "json"        }      ]    }  },  {    "description": "<p>This end point is responsible for showing accounts informations. The proccess to obtain that data is pretty simple and well described. In summary all you need to do is trigger a get request as explained below.</p>",    "version": "1.0.0",    "type": "get",    "url": "/v1/accounts/:id",    "title": "Show account",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>Account id</p>"          }        ]      }    },    "name": "ShowAccount",    "group": "Accounts",    "permission": [      {        "name": "authenticated users only"      }    ],    "examples": [      {        "title": "Just to not lose the habit, here is another example of use.",        "content": "curl -i\n-H 'CONTENT-TYPE: application/json'\n-H 'AUTHORIZATION: Bearer <token>'\nhttps://api.enriquece.me/accounts/5984ea9f562a20000468442f",        "type": "curl"      }    ],    "filename": "app/controllers/v1/accounts_controller.rb",    "groupTitle": "Accounts",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "string",            "optional": false,            "field": "content-type",            "description": "<p>The content type of request. Must always be filled with 'application/json'</p>"          },          {            "group": "Header",            "type": "string",            "optional": false,            "field": "Authorization",            "description": "<p>Authentication token of current user</p>"          }        ]      },      "examples": [        {          "title": "If you need an example of header, here you have it.",          "content": "Content-Type: application/json Authorization: Bearer <token>",          "type": "json"        }      ]    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "data",            "description": ""          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "data.id",            "description": "<p>Id of object in database</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "data.type",            "description": "<p>Describes the type of object</p>"          },          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "data.attributes",            "description": "<p>List attributes of an object</p>"          },          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "included",            "description": "<p>Array of objects with relationship data</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "included.id",            "description": "<p>Id of related object in database</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "included.type",            "description": "<p>Describes the type realted of object</p>"          },          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "included.attributes",            "description": "<p>List attributes of a related object</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "data.attributes.name",            "description": "<p>Account's name</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "data.attributes.description",            "description": "<p>Accounts's description</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "data.attributes.initial-balance",            "description": "<p>Account opening balance</p>"          }        ]      },      "examples": [        {          "title": "Success response body:",          "content": "HTTP/1.1 200 OK\n{\n  \"data\": {\n    \"id\": \"5984ea9f562a20000468442f\",\n    \"type\": \"account\",\n    \"attributes\": {\n      \"name\": \"Nova conta\",\n      \"description\": \"Minha nova conta\",\n      \"initial-balance\": 30\n    },\n    \"relationships\": {\n      \"bank\": {\n        \"data\": {\n          \"id\": \"5984ea08943f620004eb335f\",\n          \"type\": \"banks\"\n        }\n      },\n      \"account-type\": {\n        \"data\": {\n            \"id\": \"5984ea08943f620004eb3375\",\n            \"type\": \"account-types\"\n        }\n      }\n    }\n  },\n  \"included\": [\n    {\n      \"id\": \"5984ea08943f620004eb335f\",\n      \"type\": \"bank\",\n      \"attributes\": {\n        \"name\": \"Banco do Brasil S.A.\",\n        \"code\": 1\n      }\n    },\n    {\n      \"id\": \"5984ea08943f620004eb3375\",\n      \"type\": \"account-type\",\n      \"attributes\": {\n        \"name\": \"Conta corrente\"\n      }\n    }\n  ]\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "json",            "optional": false,            "field": "unauthorized",            "description": "<p>Authorization token is invalid, not provided or your access to this resource is not allowed.</p>"          }        ]      },      "examples": [        {          "title": "401 - Unauthorized error response body:",          "content": "HTTP/1.1 401 Unauthorized\n{\n  \"errors\": [\n    {\n      \"source\": {\n        \"pointer\": \"/data/attributes/<object>\"\n      },\n      \"detail\": \"Not Authorized\"\n    }\n  ]\n}",          "type": "json"        }      ]    }  },  {    "description": "<p>If you wanna see data about a single account, You are happly in the right place. Follow me and let's learn how to do that.</p>",    "version": "1.0.0",    "type": "put",    "url": "/v1/accounts/:id",    "title": "Update account",    "name": "UpdateAccount",    "group": "Accounts",    "permission": [      {        "name": "authenticated users only"      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "Id",            "description": "<p>Account id</p>"          },          {            "group": "Parameter",            "type": "String",            "size": "1..100",            "optional": false,            "field": "name",            "description": "<p>A short name to your virtual account</p>"          },          {            "group": "Parameter",            "type": "String",            "size": "..500",            "optional": true,            "field": "description",            "description": "<p>A description to your virutal account</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "initial_balance",            "description": "<p>Starting balance of the virtual account</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "bank_id",            "description": "<p>Bank id. This field must be filled with an existing bank id. To see how to obtain this value take a look at our banks section.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "account_type_id",            "description": "<p>This field must be filled with an existing accoint type id. To see how to obtain this value take a look at our accounts types serction.</p>"          }        ]      },      "examples": [        {          "title": "Request body example",          "content": "You're getting badly used, aren't you? Of course we have an example of the\nrequest body for you to take a look at. Go ahead!\n\n{\n  \"name\": \"Nova conta\",\n  \"description\": \"Minha nova conta\",\n  \"initial_balance\": 30,\n  \"bank_id\": \"5984ea08943f620004eb335f\",\n  \"account_type_id\": \"5984ea08943f620004eb3375\"\n}",          "type": "json"        }      ]    },    "examples": [      {        "title": "Coold down, here is your usage example:",        "content": "Guess what? You have to replace the <token> with the one provided by user.\n\ncurl -i\n-X PUT\n-H 'CONTENT-TYPE: application/json'\n-H 'AUTHORIZATION: Bearer <token>'\n-d '{\n      \"name\": \"Nova conta\",\n      \"description\":\n      \"Minha nova conta\",\n      \"initial_balance\": 30,\n      \"bank_id\": \"5984ea08943f620004eb335f\",\n      \"account_type_id\": \"5984ea08943f620004eb3375\"\n    }'\nhttps://api.enriquece.me/accounts/5984ea9f562a20000468442f",        "type": "curl"      }    ],    "filename": "app/controllers/v1/accounts_controller.rb",    "groupTitle": "Accounts",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "string",            "optional": false,            "field": "content-type",            "description": "<p>The content type of request. Must always be filled with 'application/json'</p>"          },          {            "group": "Header",            "type": "string",            "optional": false,            "field": "Authorization",            "description": "<p>Authentication token of current user</p>"          }        ]      },      "examples": [        {          "title": "If you need an example of header, here you have it.",          "content": "Content-Type: application/json Authorization: Bearer <token>",          "type": "json"        }      ]    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "data",            "description": ""          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "data.id",            "description": "<p>Id of object in database</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "data.type",            "description": "<p>Describes the type of object</p>"          },          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "data.attributes",            "description": "<p>List attributes of an object</p>"          },          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "included",            "description": "<p>Array of objects with relationship data</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "included.id",            "description": "<p>Id of related object in database</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "included.type",            "description": "<p>Describes the type realted of object</p>"          },          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "included.attributes",            "description": "<p>List attributes of a related object</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "data.attributes.name",            "description": "<p>Account's name</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "data.attributes.description",            "description": "<p>Accounts's description</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "data.attributes.initial-balance",            "description": "<p>Account opening balance</p>"          }        ]      },      "examples": [        {          "title": "Success response body:",          "content": "HTTP/1.1 200 OK\n{\n  \"data\": {\n    \"id\": \"5984ea9f562a20000468442f\",\n    \"type\": \"account\",\n    \"attributes\": {\n      \"name\": \"Nova conta\",\n      \"description\": \"Minha nova conta\",\n      \"initial-balance\": 30\n    },\n    \"relationships\": {\n      \"bank\": {\n        \"data\": {\n          \"id\": \"5984ea08943f620004eb335f\",\n          \"type\": \"banks\"\n        }\n      },\n      \"account-type\": {\n        \"data\": {\n            \"id\": \"5984ea08943f620004eb3375\",\n            \"type\": \"account-types\"\n        }\n      }\n    }\n  },\n  \"included\": [\n    {\n      \"id\": \"5984ea08943f620004eb335f\",\n      \"type\": \"bank\",\n      \"attributes\": {\n        \"name\": \"Banco do Brasil S.A.\",\n        \"code\": 1\n      }\n    },\n    {\n      \"id\": \"5984ea08943f620004eb3375\",\n      \"type\": \"account-type\",\n      \"attributes\": {\n        \"name\": \"Conta corrente\"\n      }\n    }\n  ]\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "json",            "optional": false,            "field": "unauthorized",            "description": "<p>Authorization token is invalid, not provided or your access to this resource is not allowed.</p>"          },          {            "group": "Error 4xx",            "type": "json",            "optional": false,            "field": "unprocessable-entity",            "description": "<p>Params providaded in request body are invalid or supressed</p>"          }        ]      },      "examples": [        {          "title": "401 - Unauthorized error response body:",          "content": "HTTP/1.1 401 Unauthorized\n{\n  \"errors\": [\n    {\n      \"source\": {\n        \"pointer\": \"/data/attributes/<object>\"\n      },\n      \"detail\": \"Not Authorized\"\n    }\n  ]\n}",          "type": "json"        },        {          "title": "422 - Unprocessible Entity error response body:",          "content": "HTTP/1.1 422 Unprocessable Entity\n{\n  \"errors\": [\n    {\n      \"source\": {\n        \"pointer\": \"/data/attributes/<object>\"\n      },\n      \"detail\": \"<error message>\"\n    }\n  ]\n}",          "type": "json"        }      ]    }  },  {    "description": "<p>This is the end point where you will dispatch a post request whith user credentials for authentication. If the http code of the response is 200, the server will return a token that you need to attach in every header of authenticated request. So keep the token safe and accessible.The process is pretty simple and well documented. Hope you enjoy.</p>",    "version": "1.0.0",    "type": "post",    "url": "/v1/authenticate",    "title": "Authenticate user",    "name": "CreateAuthentication",    "group": "Authentication",    "examples": [      {        "title": "I know that some times you need an example. Me too :)",        "content": "curl -i\n-X POST\n-H 'CONTENT-TYPE: application/json'\n-d '{\"email\": \"johndoe@enriquece.me\", \"password\": \"123456\"}'\nhttps://api.enriquece.me/v1/authenticate",        "type": "curl"      }    ],    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "data",            "description": ""          },          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "data.attributes",            "description": ""          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "data.attributes.token",            "description": "<p>This is that token I told you earlier. Remenber to keep it safe and accessible, ok?</p>"          }        ]      },      "examples": [        {          "title": "Here is an example of response when everithing is ok",          "content": "If you did everithing right congratulatuons! Your response must look like the\none bellow:\n\nHTTP/1.1 200 OK\n{\n  \"data\": {\n    \"attributes\": {\n      \"token\": \"<token>\"\n    }\n  }\n}",          "type": "json"        }      ]    },    "filename": "app/controllers/v1/authentications_controller.rb",    "groupTitle": "Authentication",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "email",            "description": "<p>User's email</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "password",            "description": "<p>User's password</p>"          }        ]      },      "examples": [        {          "title": "Look at this example of json for user authentication",          "content": "Sometimes an example is better than 1000 words...\n\n{\n  \"email\": \"usuario@enriquece.me\",\n  \"password\": \"123456\"\n}",          "type": "json"        }      ]    },    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "string",            "optional": false,            "field": "content-type",            "description": "<p>This is the content type of request. This header must always be filled with 'application/json'</p>"          }        ]      },      "examples": [        {          "title": "If you need an example of header, here you have it.",          "content": "Content-Type: application/json",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "json",            "optional": false,            "field": "unprocessable-entity",            "description": "<p>Params providaded in request body are invalid or supressed</p>"          }        ]      },      "examples": [        {          "title": "422 - Unprocessible Entity error response body:",          "content": "HTTP/1.1 422 Unprocessable Entity\n{\n  \"errors\": [\n    {\n      \"source\": {\n        \"pointer\": \"/data/attributes/<object>\"\n      },\n      \"detail\": \"<error message>\"\n    }\n  ]\n}",          "type": "json"        }      ]    }  },  {    "description": "<p>To manage their finance the users should split them in different accounts. This end point is about account banks. All accounts are associated with a bank. If you want to know all the banks that exists in the system this is the right place. You just need send a get request like described below.</p>",    "version": "1.0.0",    "type": "get",    "url": "/v1/banks",    "title": "List banks",    "name": "ListBanks",    "group": "Banks",    "permission": [      {        "name": "authenticated users only"      }    ],    "examples": [      {        "title": "I know, I know, you're looking for that example right?",        "content": "If you have hit your head, or you are experiencing an amnesia crisis, that\n<token> you are seeing down there means that you need to replace it with a\nvalid authentication token. Our authentication section is always there to help\nyou if you need to.\n\ncurl -i\n-H 'CONTENT-TYPE: application/json'\n-H 'AUTHORIZATION: Bearer <token>'\nhttps://api.enriquece.me/banks",        "type": "curl"      }    ],    "success": {      "examples": [        {          "title": "How a success response look like?",          "content": "If you did every thing right your response should look like this:\n\nHTTP/1.1 200 OK\n{\n  \"data\": [\n    {\n      \"id\": \"5984ea08943f620004eb335e\",\n      \"type\": \"bank\",\n      \"attributes\": {\n        \"name\": \"Carteira\",\n        \"code\": 0\n      }\n    }\n  ]\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "data",            "description": ""          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "data.id",            "description": "<p>Id of object in database</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "data.type",            "description": "<p>Describes the type of object</p>"          },          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "data.attributes",            "description": "<p>List attributes of an object</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "data.attributes.name",            "description": "<p>Bank name</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "data.attributes.code",            "description": "<p>Bank code</p>"          }        ]      }    },    "filename": "app/controllers/v1/banks_controller.rb",    "groupTitle": "Banks",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "string",            "optional": false,            "field": "content-type",            "description": "<p>The content type of request. Must always be filled with 'application/json'</p>"          },          {            "group": "Header",            "type": "string",            "optional": false,            "field": "Authorization",            "description": "<p>Authentication token of current user</p>"          }        ]      },      "examples": [        {          "title": "If you need an example of header, here you have it.",          "content": "Content-Type: application/json Authorization: Bearer <token>",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "json",            "optional": false,            "field": "unauthorized",            "description": "<p>Authorization token is invalid, not provided or your access to this resource is not allowed.</p>"          }        ]      },      "examples": [        {          "title": "401 - Unauthorized error response body:",          "content": "HTTP/1.1 401 Unauthorized\n{\n  \"errors\": [\n    {\n      \"source\": {\n        \"pointer\": \"/data/attributes/<object>\"\n      },\n      \"detail\": \"Not Authorized\"\n    }\n  ]\n}",          "type": "json"        }      ]    }  },  {    "description": "<p>Categorize transactions is a way to keep everything under control and track your money. It allow you to understand where your money is going and take more conscious decisions. As you are used to with our stile the proccess of creating a new category is prettyi simple and well documented. All you heve to do is trigger a authenticated post request following the pattern I'll show you from now.</p>",    "version": "1.0.0",    "type": "post",    "url": "/v1/categories",    "title": "Create category",    "name": "CreateCategory",    "group": "Categories",    "permission": [      {        "name": "authenticated users only"      }    ],    "examples": [      {        "title": "Try this example that I made for you:",        "content": "If I could give you some advice it would be for you to replace <token> with a\nvalid authentication token. If I could give you another piece of advice, it\nwould be for you to visit our authentication section to learn how to get the\ntoken.\n\ncurl -i\n-X POST\n-H 'CONTENT-TYPE: application/json'\n-H 'AUTHORIZATION: Bearer <token>'\n-d '{\"name\": \"My new category\"}'\nhttps://api.enriquece.me/categories",        "type": "curl"      }    ],    "filename": "app/controllers/v1/categories_controller.rb",    "groupTitle": "Categories",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Give a name to your category</p>"          }        ]      },      "examples": [        {          "title": "Request body example",          "content": "{\n  \"name\": \"My new category\"\n}",          "type": "json"        }      ]    },    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "string",            "optional": false,            "field": "content-type",            "description": "<p>The content type of request. Must always be filled with 'application/json'</p>"          },          {            "group": "Header",            "type": "string",            "optional": false,            "field": "Authorization",            "description": "<p>Authentication token of current user</p>"          }        ]      },      "examples": [        {          "title": "If you need an example of header, here you have it.",          "content": "Content-Type: application/json Authorization: Bearer <token>",          "type": "json"        }      ]    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "data",            "description": ""          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "data.id",            "description": "<p>Id of object in database</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "data.type",            "description": "<p>Describes the type of object</p>"          },          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "data.attributes",            "description": "<p>List attributes of an object</p>"          },          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "data.relationships",            "description": "<p>Array of objects with relationship info</p>"          },          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "data.relationships.obj",            "description": "<p>Object relationship</p>"          },          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "data.relationships.obj.data",            "description": "<p>Object relationship info</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "data.relationships.obj.data.id",            "description": "<p>Object id in database</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "data.relationships.obj.data.type",            "description": "<p>Object object type</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "data.attributes.name",            "description": "<p>Category's name</p>"          }        ]      },      "examples": [        {          "title": "Success response body:",          "content": "HTTP/1.1 200 OK\n{\n  \"data\": {\n    \"id\": \"598b1e9a3c6668000430fdf8\",\n    \"type\": \"category\",\n    \"attributes\": {\n      \"name\": \"Transaporte\"\n    },\n    \"relationships\": {\n      \"subcategories\": {\n        \"data\": []\n      }\n    }\n  }\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "json",            "optional": false,            "field": "unauthorized",            "description": "<p>Authorization token is invalid, not provided or your access to this resource is not allowed.</p>"          },          {            "group": "Error 4xx",            "type": "json",            "optional": false,            "field": "unprocessable-entity",            "description": "<p>Params providaded in request body are invalid or supressed</p>"          }        ]      },      "examples": [        {          "title": "401 - Unauthorized error response body:",          "content": "HTTP/1.1 401 Unauthorized\n{\n  \"errors\": [\n    {\n      \"source\": {\n        \"pointer\": \"/data/attributes/<object>\"\n      },\n      \"detail\": \"Not Authorized\"\n    }\n  ]\n}",          "type": "json"        },        {          "title": "422 - Unprocessible Entity error response body:",          "content": "HTTP/1.1 422 Unprocessable Entity\n{\n  \"errors\": [\n    {\n      \"source\": {\n        \"pointer\": \"/data/attributes/<object>\"\n      },\n      \"detail\": \"<error message>\"\n    }\n  ]\n}",          "type": "json"        }      ]    }  },  {    "description": "<p>Categories also can be removed. Lets see how we can do it.</p>",    "version": "1.0.0",    "type": "delete",    "url": "/v1/categories/:id",    "title": "Delete category",    "name": "DeleteCategory",    "group": "Categories",    "permission": [      {        "name": "authenticated users only"      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "Id",            "description": "<p>Id of the category that will be removed.</p>"          }        ]      }    },    "examples": [      {        "title": "Another little example to help you.:",        "content": "I'll not say anymore about the <token>. You alredy know what to do about it.\nDon't you know it yet? Ok! Take a look at our authentication section.\n\ncurl -i\n-X DELETE\n-H 'CONTENT-TYPE: application/json'\n-H 'AUTHORIZATION: Bearer <token>'\nhttps://api.enriquece.me/categories/5996cbf53c21e58e697af432",        "type": "curl"      }    ],    "filename": "app/controllers/v1/categories_controller.rb",    "groupTitle": "Categories",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "string",            "optional": false,            "field": "content-type",            "description": "<p>The content type of request. Must always be filled with 'application/json'</p>"          },          {            "group": "Header",            "type": "string",            "optional": false,            "field": "Authorization",            "description": "<p>Authentication token of current user</p>"          }        ]      },      "examples": [        {          "title": "If you need an example of header, here you have it.",          "content": "Content-Type: application/json Authorization: Bearer <token>",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "json",            "optional": false,            "field": "unauthorized",            "description": "<p>Authorization token is invalid, not provided or your access to this resource is not allowed.</p>"          }        ]      },      "examples": [        {          "title": "401 - Unauthorized error response body:",          "content": "HTTP/1.1 401 Unauthorized\n{\n  \"errors\": [\n    {\n      \"source\": {\n        \"pointer\": \"/data/attributes/<object>\"\n      },\n      \"detail\": \"Not Authorized\"\n    }\n  ]\n}",          "type": "json"        }      ]    }  },  {    "description": "<p>You'll need a list of all categories for sure, and it is pretty easy to obtain and larg documented as well. The only thing you have to do is send a get request. Follow me, and I'll show you how.</p>",    "version": "1.0.0",    "type": "get",    "url": "/v1/categories",    "title": "List categories",    "name": "ListCategories",    "group": "Categories",    "permission": [      {        "name": "authenticated users only"      }    ],    "examples": [      {        "title": "Look at this example to see how easy it is:",        "content": "Replace the <token> with the one returned to current user after login.\n\ncurl -i\n-H 'CONTENT-TYPE: application/json'\n-H 'AUTHORIZATION: Bearer <token>'\nhttps://api.enriquece.me/categories",        "type": "curl"      }    ],    "success": {      "examples": [        {          "title": "This is the body of a response whith http status 200",          "content": "HTTP/1.1 200 OK\n{\n  \"data\": [\n    {\n      \"id\": \"5996cbf53c21e58e697af432\",\n      \"type\": \"category\",\n      \"attributes\": {\n        \"name\": \"Moradia\"\n      },\n      \"relationships\": {\n        \"subcategories\": {\n          \"data\": [\n            {\n              \"id\": \"5996cc753c21e58e697af433\",\n              \"type\": \"subcategory\"\n            }\n          ]\n        }\n      }\n    }\n  ],\n  \"included\": [\n    {\n      \"id\": \"5996cc753c21e58e697af433\",\n      \"type\": \"subcategory\",\n      \"attributes\": {\n        \"name\": \"Aluguel\"\n      },\n      \"relationships\": {\n        \"category\": {\n          \"data\": {\n            \"id\": \"5996cbf53c21e58e697af432\",\n            \"type\": \"categories\"\n          }\n        }\n      }\n    }\n  ]\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "data",            "description": ""          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "data.id",            "description": "<p>Id of object in database</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "data.type",            "description": "<p>Describes the type of object</p>"          },          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "data.attributes",            "description": "<p>List attributes of an object</p>"          },          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "data.relationships",            "description": "<p>Array of objects with relationship info</p>"          },          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "data.relationships.obj",            "description": "<p>Object relationship</p>"          },          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "data.relationships.obj.data",            "description": "<p>Object relationship info</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "data.relationships.obj.data.id",            "description": "<p>Object id in database</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "data.relationships.obj.data.type",            "description": "<p>Object object type</p>"          },          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "included",            "description": "<p>Array of objects with relationship data</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "included.id",            "description": "<p>Id of related object in database</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "included.type",            "description": "<p>Describes the type realted of object</p>"          },          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "included.attributes",            "description": "<p>List attributes of a related object</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "data.attributes.name",            "description": "<p>Category's name</p>"          }        ]      }    },    "filename": "app/controllers/v1/categories_controller.rb",    "groupTitle": "Categories",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "string",            "optional": false,            "field": "content-type",            "description": "<p>The content type of request. Must always be filled with 'application/json'</p>"          },          {            "group": "Header",            "type": "string",            "optional": false,            "field": "Authorization",            "description": "<p>Authentication token of current user</p>"          }        ]      },      "examples": [        {          "title": "If you need an example of header, here you have it.",          "content": "Content-Type: application/json Authorization: Bearer <token>",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "json",            "optional": false,            "field": "unauthorized",            "description": "<p>Authorization token is invalid, not provided or your access to this resource is not allowed.</p>"          }        ]      },      "examples": [        {          "title": "401 - Unauthorized error response body:",          "content": "HTTP/1.1 401 Unauthorized\n{\n  \"errors\": [\n    {\n      \"source\": {\n        \"pointer\": \"/data/attributes/<object>\"\n      },\n      \"detail\": \"Not Authorized\"\n    }\n  ]\n}",          "type": "json"        }      ]    }  },  {    "description": "<p>Some times changes are necessary and we understand it. If you whant to update your category this section was just made for you. You can reach this objective sending a put request as described below.</p>",    "version": "1.0.0",    "type": "put",    "url": "/v1/categories/:id",    "title": "Update category",    "name": "UpdateCategory",    "group": "Categories",    "permission": [      {        "name": "authenticated users only"      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>Id of the category that will be changed. This attribute will be passed in url path.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Give a name to your category</p>"          }        ]      },      "examples": [        {          "title": "Request body example",          "content": "{\n  \"name\": \"My new category\"\n}",          "type": "json"        }      ]    },    "examples": [      {        "title": "Example usage:",        "content": "At this time I'll not say anithing about replacing the token marker with a\nvalid one. I'm pretty sure that you know it.\n\ncurl -i\n-X PUT\n-H 'CONTENT-TYPE: application/json'\n-H 'AUTHORIZATION: Bearer <token>'\n-d '{<json data>}'\nhttps://api.enriquece.me/categories/5996cbf53c21e58e697af432",        "type": "curl"      }    ],    "filename": "app/controllers/v1/categories_controller.rb",    "groupTitle": "Categories",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "string",            "optional": false,            "field": "content-type",            "description": "<p>The content type of request. Must always be filled with 'application/json'</p>"          },          {            "group": "Header",            "type": "string",            "optional": false,            "field": "Authorization",            "description": "<p>Authentication token of current user</p>"          }        ]      },      "examples": [        {          "title": "If you need an example of header, here you have it.",          "content": "Content-Type: application/json Authorization: Bearer <token>",          "type": "json"        }      ]    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "data",            "description": ""          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "data.id",            "description": "<p>Id of object in database</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "data.type",            "description": "<p>Describes the type of object</p>"          },          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "data.attributes",            "description": "<p>List attributes of an object</p>"          },          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "data.relationships",            "description": "<p>Array of objects with relationship info</p>"          },          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "data.relationships.obj",            "description": "<p>Object relationship</p>"          },          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "data.relationships.obj.data",            "description": "<p>Object relationship info</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "data.relationships.obj.data.id",            "description": "<p>Object id in database</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "data.relationships.obj.data.type",            "description": "<p>Object object type</p>"          },          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "included",            "description": "<p>Array of objects with relationship data</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "included.id",            "description": "<p>Id of related object in database</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "included.type",            "description": "<p>Describes the type realted of object</p>"          },          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "included.attributes",            "description": "<p>List attributes of a related object</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "data.attributes.name",            "description": "<p>Category's name</p>"          }        ]      },      "examples": [        {          "title": "Success response body:",          "content": "HTTP/1.1 200 OK\n{\n  \"data\": {\n    \"id\": \"598b1e9a3c6668000430fdf8\",\n    \"type\": \"category\",\n    \"attributes\": {\n      \"name\": \"Transaporte\"\n    },\n    \"relationships\": {\n      \"subcategories\": {\n        \"data\": []\n      }\n    }\n  }\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "json",            "optional": false,            "field": "unauthorized",            "description": "<p>Authorization token is invalid, not provided or your access to this resource is not allowed.</p>"          },          {            "group": "Error 4xx",            "type": "json",            "optional": false,            "field": "unprocessable-entity",            "description": "<p>Params providaded in request body are invalid or supressed</p>"          }        ]      },      "examples": [        {          "title": "401 - Unauthorized error response body:",          "content": "HTTP/1.1 401 Unauthorized\n{\n  \"errors\": [\n    {\n      \"source\": {\n        \"pointer\": \"/data/attributes/<object>\"\n      },\n      \"detail\": \"Not Authorized\"\n    }\n  ]\n}",          "type": "json"        },        {          "title": "422 - Unprocessible Entity error response body:",          "content": "HTTP/1.1 422 Unprocessable Entity\n{\n  \"errors\": [\n    {\n      \"source\": {\n        \"pointer\": \"/data/attributes/<object>\"\n      },\n      \"detail\": \"<error message>\"\n    }\n  ]\n}",          "type": "json"        }      ]    }  },  {    "description": "<p>To be more specific about money flow, users can create subcategories to better organize his financial transactions. A subcategory is a category inside a category. It's management is simple and this part of the documentation describes how to create a new subcategory.</p>",    "version": "1.0.0",    "type": "post",    "url": "/v1/subcategories",    "title": "Create subcategory",    "name": "CreateSubcategory",    "group": "Subcategory",    "permission": [      {        "name": "authenticated users only"      }    ],    "examples": [      {        "title": "Example usage:",        "content": "curl -i\n-X POST\n-d '{<json data>}'\n-H 'CONTENT-TYPE: application/json'\n-H 'AUTHORIZATION: Bearer <token>'\nhttps://api.enriquece.me/subcategories",        "type": "curl"      }    ],    "filename": "app/controllers/v1/subcategories_controller.rb",    "groupTitle": "Subcategory",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Name of the sucategory</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "category_id",            "description": "<p>Id of parent category. To learn how to obtain values to fill this attribute take a look in category section of this documentation.</p>"          }        ]      },      "examples": [        {          "title": "Request body example",          "content": "{\n  \"name\": \"Gasolina\",\n  \"category_id\": \"598b1e9a3c6668000430fdf8\"\n}",          "type": "json"        }      ]    },    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "string",            "optional": false,            "field": "content-type",            "description": "<p>The content type of request. Must always be filled with 'application/json'</p>"          },          {            "group": "Header",            "type": "string",            "optional": false,            "field": "Authorization",            "description": "<p>Authentication token of current user</p>"          }        ]      },      "examples": [        {          "title": "If you need an example of header, here you have it.",          "content": "Content-Type: application/json Authorization: Bearer <token>",          "type": "json"        }      ]    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "data",            "description": ""          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "data.id",            "description": "<p>Id of object in database</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "data.type",            "description": "<p>Describes the type of object</p>"          },          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "data.attributes",            "description": "<p>List attributes of an object</p>"          },          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "data.relationships",            "description": "<p>Array of objects with relationship info</p>"          },          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "data.relationships.obj",            "description": "<p>Object relationship</p>"          },          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "data.relationships.obj.data",            "description": "<p>Object relationship info</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "data.relationships.obj.data.id",            "description": "<p>Object id in database</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "data.relationships.obj.data.type",            "description": "<p>Object object type</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "data.attributes.name",            "description": "<p>Subcategory name</p>"          }        ]      },      "examples": [        {          "title": "This is the body of a http 200 response",          "content": "HTTP/1.1 200 OK\n{\n  \"data\": {\n    \"id\": \"598c3834c54c8e0004f66518\",\n    \"type\": \"subcategory\",\n    \"attributes\": {\n        \"name\": \"Gasolina\"\n    },\n    \"relationships\": {\n      \"category\": {\n        \"data\": {\n          \"id\": \"598b1e9a3c6668000430fdf8\",\n          \"type\": \"categories\"\n        }\n      }\n    }\n  }\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "json",            "optional": false,            "field": "unauthorized",            "description": "<p>Authorization token is invalid, not provided or your access to this resource is not allowed.</p>"          },          {            "group": "Error 4xx",            "type": "json",            "optional": false,            "field": "unprocessable-entity",            "description": "<p>Params providaded in request body are invalid or supressed</p>"          }        ]      },      "examples": [        {          "title": "401 - Unauthorized error response body:",          "content": "HTTP/1.1 401 Unauthorized\n{\n  \"errors\": [\n    {\n      \"source\": {\n        \"pointer\": \"/data/attributes/<object>\"\n      },\n      \"detail\": \"Not Authorized\"\n    }\n  ]\n}",          "type": "json"        },        {          "title": "422 - Unprocessible Entity error response body:",          "content": "HTTP/1.1 422 Unprocessable Entity\n{\n  \"errors\": [\n    {\n      \"source\": {\n        \"pointer\": \"/data/attributes/<object>\"\n      },\n      \"detail\": \"<error message>\"\n    }\n  ]\n}",          "type": "json"        }      ]    }  },  {    "version": "1.0.0",    "type": "delete",    "url": "/v1/subcategories/:id",    "title": "Delete account",    "name": "DeleteSubcategory",    "group": "Subcategory",    "permission": [      {        "name": "authenticated users only"      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "Id",            "description": "<p>Subcategory id</p>"          }        ]      }    },    "examples": [      {        "title": "Example usage:",        "content": "curl -i\n-X DELETE\n-H 'CONTENT-TYPE: application/json'\n-H 'AUTHORIZATION: Bearer <token>'\nhttps://api.enriquece.me/subcategories/<id>",        "type": "curl"      }    ],    "filename": "app/controllers/v1/subcategories_controller.rb",    "groupTitle": "Subcategory",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "string",            "optional": false,            "field": "content-type",            "description": "<p>The content type of request. Must always be filled with 'application/json'</p>"          },          {            "group": "Header",            "type": "string",            "optional": false,            "field": "Authorization",            "description": "<p>Authentication token of current user</p>"          }        ]      },      "examples": [        {          "title": "If you need an example of header, here you have it.",          "content": "Content-Type: application/json Authorization: Bearer <token>",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "json",            "optional": false,            "field": "unauthorized",            "description": "<p>Authorization token is invalid, not provided or your access to this resource is not allowed.</p>"          }        ]      },      "examples": [        {          "title": "401 - Unauthorized error response body:",          "content": "HTTP/1.1 401 Unauthorized\n{\n  \"errors\": [\n    {\n      \"source\": {\n        \"pointer\": \"/data/attributes/<object>\"\n      },\n      \"detail\": \"Not Authorized\"\n    }\n  ]\n}",          "type": "json"        }      ]    }  },  {    "version": "1.0.0",    "type": "put",    "url": "/v1/subcategories/:id",    "title": "Update account",    "name": "UpdateSubcategory",    "group": "Subcategory",    "permission": [      {        "name": "authenticated users only"      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "Id",            "description": "<p>Subcategory id</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Name of the sucategory</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "category_id",            "description": "<p>Id of parent category. To learn how to obtain values to fill this attribute take a look in category section of this documentation.</p>"          }        ]      },      "examples": [        {          "title": "Request body example",          "content": "{\n  \"name\": \"Gasolina\",\n  \"category_id\": \"598b1e9a3c6668000430fdf8\"\n}",          "type": "json"        }      ]    },    "examples": [      {        "title": "Example usage:",        "content": "curl -i\n-X PUT\n-d '{<json data>}'\n-H 'CONTENT-TYPE: application/json'\n-H 'AUTHORIZATION: Bearer <token>'\nhttps://api.enriquece.me/subcategories/<id>",        "type": "curl"      }    ],    "filename": "app/controllers/v1/subcategories_controller.rb",    "groupTitle": "Subcategory",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "string",            "optional": false,            "field": "content-type",            "description": "<p>The content type of request. Must always be filled with 'application/json'</p>"          },          {            "group": "Header",            "type": "string",            "optional": false,            "field": "Authorization",            "description": "<p>Authentication token of current user</p>"          }        ]      },      "examples": [        {          "title": "If you need an example of header, here you have it.",          "content": "Content-Type: application/json Authorization: Bearer <token>",          "type": "json"        }      ]    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "data",            "description": ""          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "data.id",            "description": "<p>Id of object in database</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "data.type",            "description": "<p>Describes the type of object</p>"          },          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "data.attributes",            "description": "<p>List attributes of an object</p>"          },          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "data.relationships",            "description": "<p>Array of objects with relationship info</p>"          },          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "data.relationships.obj",            "description": "<p>Object relationship</p>"          },          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "data.relationships.obj.data",            "description": "<p>Object relationship info</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "data.relationships.obj.data.id",            "description": "<p>Object id in database</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "data.relationships.obj.data.type",            "description": "<p>Object object type</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "data.attributes.name",            "description": "<p>Subcategory name</p>"          }        ]      },      "examples": [        {          "title": "This is the body of a http 200 response",          "content": "HTTP/1.1 200 OK\n{\n  \"data\": {\n    \"id\": \"598c3834c54c8e0004f66518\",\n    \"type\": \"subcategory\",\n    \"attributes\": {\n        \"name\": \"Gasolina\"\n    },\n    \"relationships\": {\n      \"category\": {\n        \"data\": {\n          \"id\": \"598b1e9a3c6668000430fdf8\",\n          \"type\": \"categories\"\n        }\n      }\n    }\n  }\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "json",            "optional": false,            "field": "unauthorized",            "description": "<p>Authorization token is invalid, not provided or your access to this resource is not allowed.</p>"          },          {            "group": "Error 4xx",            "type": "json",            "optional": false,            "field": "unprocessable-entity",            "description": "<p>Params providaded in request body are invalid or supressed</p>"          }        ]      },      "examples": [        {          "title": "401 - Unauthorized error response body:",          "content": "HTTP/1.1 401 Unauthorized\n{\n  \"errors\": [\n    {\n      \"source\": {\n        \"pointer\": \"/data/attributes/<object>\"\n      },\n      \"detail\": \"Not Authorized\"\n    }\n  ]\n}",          "type": "json"        },        {          "title": "422 - Unprocessible Entity error response body:",          "content": "HTTP/1.1 422 Unprocessable Entity\n{\n  \"errors\": [\n    {\n      \"source\": {\n        \"pointer\": \"/data/attributes/<object>\"\n      },\n      \"detail\": \"<error message>\"\n    }\n  ]\n}",          "type": "json"        }      ]    }  },  {    "version": "1.0.0",    "type": "post",    "url": "/v1/transactions",    "title": "Create transaction",    "name": "CreateTransaction",    "group": "Transactions",    "permission": [      {        "name": "authenticated users only"      }    ],    "examples": [      {        "title": "Example usage:",        "content": "curl -i\n-X POST\n-d '{<json data>}'\n-H 'CONTENT-TYPE: application/json'\n-H 'AUTHORIZATION: Bearer <token>'\nhttps://api.enriquece.me/transactions",        "type": "curl"      }    ],    "filename": "app/controllers/v1/transactions_controller.rb",    "groupTitle": "Transactions",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "description",            "description": "<p>Transaction description</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "price",            "description": "<p>Transaction price</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "date",            "description": "<p>Date Transaction date</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": true,            "field": "paid",            "description": "<p>=false Transaction status</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "note",            "description": "<p>Transaction notes</p>"          },          {            "group": "Parameter",            "type": "Object",            "optional": true,            "field": "recurrence",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "allowedValues": [              "\"day\"",              "\"week\"",              "\"month\"",              "\"year\""            ],            "optional": false,            "field": "every",            "description": "<p>Period when recurrence occurs</p>"          },          {            "group": "Parameter",            "type": "String",            "allowedValues": [              "\"1..31\"",              "\"first\"",              "\"second\"",              "\"third\"",              "\"fourth\"",              "\"fifth\""            ],            "optional": true,            "field": "on",            "description": "<p>Day when recurrences occurs</p>"          },          {            "group": "Parameter",            "type": "String",            "allowedValues": [              "\"1..31\"",              "\"monthly\"",              "\"bimonthly\"",              "\"quarterly\"",              "\"semesterly\""            ],            "optional": true,            "field": "inteval",            "description": "<p>Interval when recurrences occurs</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "repeat",            "description": "<p>Amount of times a recurrence should occurs</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "category_id",            "description": "<p>Category id of transaction</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "subcategory_id",            "description": "<p>Subcategory id of transaction</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "account_id",            "description": "<p>Account id of transaction</p>"          }        ]      },      "examples": [        {          "title": "Request body example",          "content": "{\n  \"description\": \"Compras na quitanda\",\n  \"price\": -100.00,\n  \"date\": \"2017-07-27\",\n  \"paid\": true,\n  \"note\": \"Abastecimento da dispensa\"\n  \"recurrence\": {\n    \"every\": \"month\",\n    \"on\": 27,\n    \"interval\": \"monthly\",\n    \"repeat\": 100\n  },\n  \"category_id\": \"5984e907562a20000468442d\",\n  \"subcategory_id\": \"5984e907562a20000468442h\",\n  \"account_id\": \"5984ea9f562a20000468442f\"\n}",          "type": "json"        }      ]    },    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "string",            "optional": false,            "field": "content-type",            "description": "<p>The content type of request. Must always be filled with 'application/json'</p>"          },          {            "group": "Header",            "type": "string",            "optional": false,            "field": "Authorization",            "description": "<p>Authentication token of current user</p>"          }        ]      },      "examples": [        {          "title": "If you need an example of header, here you have it.",          "content": "Content-Type: application/json Authorization: Bearer <token>",          "type": "json"        }      ]    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "data",            "description": ""          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "data.id",            "description": "<p>Id of object in database</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "data.type",            "description": "<p>Describes the type of object</p>"          },          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "data.attributes",            "description": "<p>List attributes of an object</p>"          },          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "data.relationships",            "description": "<p>Array of objects with relationship info</p>"          },          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "data.relationships.obj",            "description": "<p>Object relationship</p>"          },          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "data.relationships.obj.data",            "description": "<p>Object relationship info</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "data.relationships.obj.data.id",            "description": "<p>Object id in database</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "data.relationships.obj.data.type",            "description": "<p>Object object type</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "description",            "description": "<p>data.attributes.description Transaction description</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "price",            "description": "<p>data.attributes.price Price Transaction price</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "date",            "description": "<p>data.attributes.date Date Transaction date</p>"          },          {            "group": "Success 200",            "type": "Boolean",            "optional": false,            "field": "paid",            "description": "<p>data.attributes.paid Paid Transaction status: true = paid, false = not paid</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "note",            "description": "<p>data.attributes.note Note Transaction notes</p>"          },          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "recurrence",            "description": "<p>data.attributes.recurrence</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "every",            "description": "<p>data.attributes.recurrence.every Period when recurrence occurs</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "on",            "description": "<p>data.attributes.recurrence.on Day when recurrences occurs</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "inteval",            "description": "<p>data.attributes.recurrence.interval Interval when recurrences occurs</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "repeat",            "description": "<p>data.attributes.recurrence.repeat Amount of times a recurrence should occurs</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "category_id",            "description": "<p>data.attributes.category_id Category id of transaction</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "subcategory_id",            "description": "<p>data.attributes.subcategory_id Subcategory id of transaction</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "account_id",            "description": "<p>data.attributes.account_id Account id of transaction</p>"          }        ]      },      "examples": [        {          "title": "Success response body:",          "content": "HTTP/1.1 200 OK\n{\n  \"data\": {\n    \"id\": \"598c495fc54c8e0004f6651e\",\n    \"type\": \"transaction\",\n    \"attributes\": {\n      \"description\": \"Compras na quitanda\",\n      \"price\": -100,\n      \"date\": \"2017-07-27\",\n      \"paid\": false,\n      \"note\": null\n    },\n    \"relationships\": {\n      \"account\": {\n        \"data\": {\n          \"id\": \"598c4936c54c8e0004f6651d\",\n          \"type\": \"accounts\"\n        }\n      },\n      \"category\": {\n        \"data\": {\n          \"id\": \"598c485dc54c8e0004f6651a\",\n          \"type\": \"categories\"\n        }\n      },\n      \"subcategory\": {\n        \"data\": {\n          \"id\": \"598c4898c54c8e0004f6651b\",\n          \"type\": \"subcategories\"\n        }\n      },\n      \"recurrence\": {\n        \"data\": {\n          \"id\": \"598c495fc54c8e0004f6651f\",\n          \"type\": \"recurrences\"\n        }\n      }\n    }\n  }\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "json",            "optional": false,            "field": "unauthorized",            "description": "<p>Authorization token is invalid, not provided or your access to this resource is not allowed.</p>"          },          {            "group": "Error 4xx",            "type": "json",            "optional": false,            "field": "unprocessable-entity",            "description": "<p>Params providaded in request body are invalid or supressed</p>"          }        ]      },      "examples": [        {          "title": "401 - Unauthorized error response body:",          "content": "HTTP/1.1 401 Unauthorized\n{\n  \"errors\": [\n    {\n      \"source\": {\n        \"pointer\": \"/data/attributes/<object>\"\n      },\n      \"detail\": \"Not Authorized\"\n    }\n  ]\n}",          "type": "json"        },        {          "title": "422 - Unprocessible Entity error response body:",          "content": "HTTP/1.1 422 Unprocessable Entity\n{\n  \"errors\": [\n    {\n      \"source\": {\n        \"pointer\": \"/data/attributes/<object>\"\n      },\n      \"detail\": \"<error message>\"\n    }\n  ]\n}",          "type": "json"        }      ]    }  },  {    "version": "1.0.0",    "type": "delete",    "url": "/v1/transactions/:id",    "title": "Delete transaction",    "name": "DeleteTransaction",    "group": "Transactions",    "permission": [      {        "name": "authenticated users only"      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>Transaction id</p>"          }        ]      }    },    "examples": [      {        "title": "Example usage:",        "content": "curl -i\n-X DELETE\n-H 'CONTENT-TYPE: application/json'\n-H 'AUTHORIZATION: Bearer <token>'\nhttps://api.enriquece.me/transactions/<id>",        "type": "curl"      }    ],    "filename": "app/controllers/v1/transactions_controller.rb",    "groupTitle": "Transactions",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "string",            "optional": false,            "field": "content-type",            "description": "<p>The content type of request. Must always be filled with 'application/json'</p>"          },          {            "group": "Header",            "type": "string",            "optional": false,            "field": "Authorization",            "description": "<p>Authentication token of current user</p>"          }        ]      },      "examples": [        {          "title": "If you need an example of header, here you have it.",          "content": "Content-Type: application/json Authorization: Bearer <token>",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "json",            "optional": false,            "field": "unauthorized",            "description": "<p>Authorization token is invalid, not provided or your access to this resource is not allowed.</p>"          }        ]      },      "examples": [        {          "title": "401 - Unauthorized error response body:",          "content": "HTTP/1.1 401 Unauthorized\n{\n  \"errors\": [\n    {\n      \"source\": {\n        \"pointer\": \"/data/attributes/<object>\"\n      },\n      \"detail\": \"Not Authorized\"\n    }\n  ]\n}",          "type": "json"        }      ]    }  },  {    "version": "1.0.0",    "type": "get",    "url": "/v1/transactions List transactions in current month",    "title": "List transactions in the current month",    "name": "ListTransactions",    "group": "Transactions",    "permission": [      {        "name": "authenticated users only"      }    ],    "examples": [      {        "title": "Example usage:",        "content": "curl -i\n-H 'CONTENT-TYPE: application/json'\n-H 'AUTHORIZATION: Bearer <token>'\nhttps://api.enriquece.me/transactions",        "type": "curl"      }    ],    "filename": "app/controllers/v1/transactions_controller.rb",    "groupTitle": "Transactions",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "string",            "optional": false,            "field": "content-type",            "description": "<p>The content type of request. Must always be filled with 'application/json'</p>"          },          {            "group": "Header",            "type": "string",            "optional": false,            "field": "Authorization",            "description": "<p>Authentication token of current user</p>"          }        ]      },      "examples": [        {          "title": "If you need an example of header, here you have it.",          "content": "Content-Type: application/json Authorization: Bearer <token>",          "type": "json"        }      ]    },    "success": {      "examples": [        {          "title": "Success response body:",          "content": "HTTP/1.1 200 OK\n{\n  \"data\": [\n    {\n      \"id\": \"598c495fc54c8e0004f6651e\",\n      \"type\": \"transaction\",\n      \"attributes\": {\n        \"description\": \"Compras na quitanda\",\n        \"price\": -100,\n        \"date\": \"2017-07-27\",\n        \"paid\": false,\n        \"note\": null\n      },\n      \"relationships\": {\n        \"account\": {\n          \"data\": {\n            \"id\": \"598c4936c54c8e0004f6651d\",\n            \"type\": \"accounts\"\n          }\n        },\n        \"category\": {\n          \"data\": {\n            \"id\": \"598c485dc54c8e0004f6651a\",\n            \"type\": \"categories\"\n          }\n        },\n        \"subcategory\": {\n          \"data\": {\n            \"id\": \"598c4898c54c8e0004f6651b\",\n            \"type\": \"subcategories\"\n          }\n        },\n        \"recurrence\": {\n          \"data\": {\n            \"id\": \"598c495fc54c8e0004f6651f\",\n            \"type\": \"recurrences\"\n          }\n        }\n      }\n    }\n  ]\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "data",            "description": ""          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "data.id",            "description": "<p>Id of object in database</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "data.type",            "description": "<p>Describes the type of object</p>"          },          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "data.attributes",            "description": "<p>List attributes of an object</p>"          },          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "data.relationships",            "description": "<p>Array of objects with relationship info</p>"          },          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "data.relationships.obj",            "description": "<p>Object relationship</p>"          },          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "data.relationships.obj.data",            "description": "<p>Object relationship info</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "data.relationships.obj.data.id",            "description": "<p>Object id in database</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "data.relationships.obj.data.type",            "description": "<p>Object object type</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "description",            "description": "<p>data.attributes.description Transaction description</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "price",            "description": "<p>data.attributes.price Price Transaction price</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "date",            "description": "<p>data.attributes.date Date Transaction date</p>"          },          {            "group": "Success 200",            "type": "Boolean",            "optional": false,            "field": "paid",            "description": "<p>data.attributes.paid Paid Transaction status: true = paid, false = not paid</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "note",            "description": "<p>data.attributes.note Note Transaction notes</p>"          },          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "recurrence",            "description": "<p>data.attributes.recurrence</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "every",            "description": "<p>data.attributes.recurrence.every Period when recurrence occurs</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "on",            "description": "<p>data.attributes.recurrence.on Day when recurrences occurs</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "inteval",            "description": "<p>data.attributes.recurrence.interval Interval when recurrences occurs</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "repeat",            "description": "<p>data.attributes.recurrence.repeat Amount of times a recurrence should occurs</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "category_id",            "description": "<p>data.attributes.category_id Category id of transaction</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "subcategory_id",            "description": "<p>data.attributes.subcategory_id Subcategory id of transaction</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "account_id",            "description": "<p>data.attributes.account_id Account id of transaction</p>"          }        ]      }    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "json",            "optional": false,            "field": "unauthorized",            "description": "<p>Authorization token is invalid, not provided or your access to this resource is not allowed.</p>"          }        ]      },      "examples": [        {          "title": "401 - Unauthorized error response body:",          "content": "HTTP/1.1 401 Unauthorized\n{\n  \"errors\": [\n    {\n      \"source\": {\n        \"pointer\": \"/data/attributes/<object>\"\n      },\n      \"detail\": \"Not Authorized\"\n    }\n  ]\n}",          "type": "json"        }      ]    }  },  {    "version": "1.0.0",    "type": "get",    "url": "/v1/transactions/since/:start_data",    "title": "List transactions between start date and the last day in current month",    "name": "ListTransactionsSince",    "group": "Transactions",    "permission": [      {        "name": "authenticated users only"      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "A",            "description": "<p>date representing the interval beginning</p>"          }        ]      }    },    "examples": [      {        "title": "Example usage:",        "content": "curl -i\n-H 'CONTENT-TYPE: application/json'\n-H 'AUTHORIZATION: Bearer <token>'\nhttps://api.enriquece.me/transactions/since/<start_date>",        "type": "curl"      }    ],    "filename": "app/controllers/v1/transactions_controller.rb",    "groupTitle": "Transactions",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "string",            "optional": false,            "field": "content-type",            "description": "<p>The content type of request. Must always be filled with 'application/json'</p>"          },          {            "group": "Header",            "type": "string",            "optional": false,            "field": "Authorization",            "description": "<p>Authentication token of current user</p>"          }        ]      },      "examples": [        {          "title": "If you need an example of header, here you have it.",          "content": "Content-Type: application/json Authorization: Bearer <token>",          "type": "json"        }      ]    },    "success": {      "examples": [        {          "title": "Success response body:",          "content": "HTTP/1.1 200 OK\n{\n  \"data\": [\n    {\n      \"id\": \"598c495fc54c8e0004f6651e\",\n      \"type\": \"transaction\",\n      \"attributes\": {\n        \"description\": \"Compras na quitanda\",\n        \"price\": -100,\n        \"date\": \"2017-07-27\",\n        \"paid\": false,\n        \"note\": null\n      },\n      \"relationships\": {\n        \"account\": {\n          \"data\": {\n            \"id\": \"598c4936c54c8e0004f6651d\",\n            \"type\": \"accounts\"\n          }\n        },\n        \"category\": {\n          \"data\": {\n            \"id\": \"598c485dc54c8e0004f6651a\",\n            \"type\": \"categories\"\n          }\n        },\n        \"subcategory\": {\n          \"data\": {\n            \"id\": \"598c4898c54c8e0004f6651b\",\n            \"type\": \"subcategories\"\n          }\n        },\n        \"recurrence\": {\n          \"data\": {\n            \"id\": \"598c495fc54c8e0004f6651f\",\n            \"type\": \"recurrences\"\n          }\n        }\n      }\n    }\n  ]\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "data",            "description": ""          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "data.id",            "description": "<p>Id of object in database</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "data.type",            "description": "<p>Describes the type of object</p>"          },          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "data.attributes",            "description": "<p>List attributes of an object</p>"          },          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "data.relationships",            "description": "<p>Array of objects with relationship info</p>"          },          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "data.relationships.obj",            "description": "<p>Object relationship</p>"          },          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "data.relationships.obj.data",            "description": "<p>Object relationship info</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "data.relationships.obj.data.id",            "description": "<p>Object id in database</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "data.relationships.obj.data.type",            "description": "<p>Object object type</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "description",            "description": "<p>data.attributes.description Transaction description</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "price",            "description": "<p>data.attributes.price Price Transaction price</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "date",            "description": "<p>data.attributes.date Date Transaction date</p>"          },          {            "group": "Success 200",            "type": "Boolean",            "optional": false,            "field": "paid",            "description": "<p>data.attributes.paid Paid Transaction status: true = paid, false = not paid</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "note",            "description": "<p>data.attributes.note Note Transaction notes</p>"          },          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "recurrence",            "description": "<p>data.attributes.recurrence</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "every",            "description": "<p>data.attributes.recurrence.every Period when recurrence occurs</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "on",            "description": "<p>data.attributes.recurrence.on Day when recurrences occurs</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "inteval",            "description": "<p>data.attributes.recurrence.interval Interval when recurrences occurs</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "repeat",            "description": "<p>data.attributes.recurrence.repeat Amount of times a recurrence should occurs</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "category_id",            "description": "<p>data.attributes.category_id Category id of transaction</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "subcategory_id",            "description": "<p>data.attributes.subcategory_id Subcategory id of transaction</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "account_id",            "description": "<p>data.attributes.account_id Account id of transaction</p>"          }        ]      }    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "json",            "optional": false,            "field": "unauthorized",            "description": "<p>Authorization token is invalid, not provided or your access to this resource is not allowed.</p>"          }        ]      },      "examples": [        {          "title": "401 - Unauthorized error response body:",          "content": "HTTP/1.1 401 Unauthorized\n{\n  \"errors\": [\n    {\n      \"source\": {\n        \"pointer\": \"/data/attributes/<object>\"\n      },\n      \"detail\": \"Not Authorized\"\n    }\n  ]\n}",          "type": "json"        }      ]    }  },  {    "version": "1.0.0",    "type": "get",    "url": "/v1/transactions/since/:start_date/until/:end_date",    "title": "List transactions between a interval of dates",    "name": "ListTransactionsSinceUntil",    "group": "Transactions",    "permission": [      {        "name": "authenticated users only"      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "A",            "description": "<p>date representing the interval beginning</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "end_date",            "description": "<p>A date representing the interval end</p>"          }        ]      }    },    "examples": [      {        "title": "Example usage:",        "content": "curl -i\n-H 'CONTENT-TYPE: application/json'\n-H 'AUTHORIZATION: Bearer <token>'\nhttps://api.enriquece.me/transactions/since/<start_date>/until/<end_date>",        "type": "curl"      }    ],    "filename": "app/controllers/v1/transactions_controller.rb",    "groupTitle": "Transactions",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "string",            "optional": false,            "field": "content-type",            "description": "<p>The content type of request. Must always be filled with 'application/json'</p>"          },          {            "group": "Header",            "type": "string",            "optional": false,            "field": "Authorization",            "description": "<p>Authentication token of current user</p>"          }        ]      },      "examples": [        {          "title": "If you need an example of header, here you have it.",          "content": "Content-Type: application/json Authorization: Bearer <token>",          "type": "json"        }      ]    },    "success": {      "examples": [        {          "title": "Success response body:",          "content": "HTTP/1.1 200 OK\n{\n  \"data\": [\n    {\n      \"id\": \"598c495fc54c8e0004f6651e\",\n      \"type\": \"transaction\",\n      \"attributes\": {\n        \"description\": \"Compras na quitanda\",\n        \"price\": -100,\n        \"date\": \"2017-07-27\",\n        \"paid\": false,\n        \"note\": null\n      },\n      \"relationships\": {\n        \"account\": {\n          \"data\": {\n            \"id\": \"598c4936c54c8e0004f6651d\",\n            \"type\": \"accounts\"\n          }\n        },\n        \"category\": {\n          \"data\": {\n            \"id\": \"598c485dc54c8e0004f6651a\",\n            \"type\": \"categories\"\n          }\n        },\n        \"subcategory\": {\n          \"data\": {\n            \"id\": \"598c4898c54c8e0004f6651b\",\n            \"type\": \"subcategories\"\n          }\n        },\n        \"recurrence\": {\n          \"data\": {\n            \"id\": \"598c495fc54c8e0004f6651f\",\n            \"type\": \"recurrences\"\n          }\n        }\n      }\n    }\n  ]\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "data",            "description": ""          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "data.id",            "description": "<p>Id of object in database</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "data.type",            "description": "<p>Describes the type of object</p>"          },          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "data.attributes",            "description": "<p>List attributes of an object</p>"          },          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "data.relationships",            "description": "<p>Array of objects with relationship info</p>"          },          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "data.relationships.obj",            "description": "<p>Object relationship</p>"          },          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "data.relationships.obj.data",            "description": "<p>Object relationship info</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "data.relationships.obj.data.id",            "description": "<p>Object id in database</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "data.relationships.obj.data.type",            "description": "<p>Object object type</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "description",            "description": "<p>data.attributes.description Transaction description</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "price",            "description": "<p>data.attributes.price Price Transaction price</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "date",            "description": "<p>data.attributes.date Date Transaction date</p>"          },          {            "group": "Success 200",            "type": "Boolean",            "optional": false,            "field": "paid",            "description": "<p>data.attributes.paid Paid Transaction status: true = paid, false = not paid</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "note",            "description": "<p>data.attributes.note Note Transaction notes</p>"          },          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "recurrence",            "description": "<p>data.attributes.recurrence</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "every",            "description": "<p>data.attributes.recurrence.every Period when recurrence occurs</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "on",            "description": "<p>data.attributes.recurrence.on Day when recurrences occurs</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "inteval",            "description": "<p>data.attributes.recurrence.interval Interval when recurrences occurs</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "repeat",            "description": "<p>data.attributes.recurrence.repeat Amount of times a recurrence should occurs</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "category_id",            "description": "<p>data.attributes.category_id Category id of transaction</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "subcategory_id",            "description": "<p>data.attributes.subcategory_id Subcategory id of transaction</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "account_id",            "description": "<p>data.attributes.account_id Account id of transaction</p>"          }        ]      }    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "json",            "optional": false,            "field": "unauthorized",            "description": "<p>Authorization token is invalid, not provided or your access to this resource is not allowed.</p>"          }        ]      },      "examples": [        {          "title": "401 - Unauthorized error response body:",          "content": "HTTP/1.1 401 Unauthorized\n{\n  \"errors\": [\n    {\n      \"source\": {\n        \"pointer\": \"/data/attributes/<object>\"\n      },\n      \"detail\": \"Not Authorized\"\n    }\n  ]\n}",          "type": "json"        }      ]    }  },  {    "version": "1.0.0",    "type": "get",    "url": "/v1/transactions/:id",    "title": "Show transaction",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>Transaction id</p>"          }        ]      }    },    "name": "ShowTransaction",    "group": "Transactions",    "permission": [      {        "name": "authenticated users only"      }    ],    "examples": [      {        "title": "Example usage:",        "content": "curl -i\n-H 'CONTENT-TYPE: application/json'\n-H 'AUTHORIZATION: Bearer <token>'\nhttps://api.enriquece.me/transactions/<id>",        "type": "curl"      }    ],    "filename": "app/controllers/v1/transactions_controller.rb",    "groupTitle": "Transactions",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "string",            "optional": false,            "field": "content-type",            "description": "<p>The content type of request. Must always be filled with 'application/json'</p>"          },          {            "group": "Header",            "type": "string",            "optional": false,            "field": "Authorization",            "description": "<p>Authentication token of current user</p>"          }        ]      },      "examples": [        {          "title": "If you need an example of header, here you have it.",          "content": "Content-Type: application/json Authorization: Bearer <token>",          "type": "json"        }      ]    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "data",            "description": ""          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "data.id",            "description": "<p>Id of object in database</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "data.type",            "description": "<p>Describes the type of object</p>"          },          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "data.attributes",            "description": "<p>List attributes of an object</p>"          },          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "data.relationships",            "description": "<p>Array of objects with relationship info</p>"          },          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "data.relationships.obj",            "description": "<p>Object relationship</p>"          },          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "data.relationships.obj.data",            "description": "<p>Object relationship info</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "data.relationships.obj.data.id",            "description": "<p>Object id in database</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "data.relationships.obj.data.type",            "description": "<p>Object object type</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "description",            "description": "<p>data.attributes.description Transaction description</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "price",            "description": "<p>data.attributes.price Price Transaction price</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "date",            "description": "<p>data.attributes.date Date Transaction date</p>"          },          {            "group": "Success 200",            "type": "Boolean",            "optional": false,            "field": "paid",            "description": "<p>data.attributes.paid Paid Transaction status: true = paid, false = not paid</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "note",            "description": "<p>data.attributes.note Note Transaction notes</p>"          },          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "recurrence",            "description": "<p>data.attributes.recurrence</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "every",            "description": "<p>data.attributes.recurrence.every Period when recurrence occurs</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "on",            "description": "<p>data.attributes.recurrence.on Day when recurrences occurs</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "inteval",            "description": "<p>data.attributes.recurrence.interval Interval when recurrences occurs</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "repeat",            "description": "<p>data.attributes.recurrence.repeat Amount of times a recurrence should occurs</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "category_id",            "description": "<p>data.attributes.category_id Category id of transaction</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "subcategory_id",            "description": "<p>data.attributes.subcategory_id Subcategory id of transaction</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "account_id",            "description": "<p>data.attributes.account_id Account id of transaction</p>"          }        ]      },      "examples": [        {          "title": "Success response body:",          "content": "HTTP/1.1 200 OK\n{\n  \"data\": {\n    \"id\": \"598c495fc54c8e0004f6651e\",\n    \"type\": \"transaction\",\n    \"attributes\": {\n      \"description\": \"Compras na quitanda\",\n      \"price\": -100,\n      \"date\": \"2017-07-27\",\n      \"paid\": false,\n      \"note\": null\n    },\n    \"relationships\": {\n      \"account\": {\n        \"data\": {\n          \"id\": \"598c4936c54c8e0004f6651d\",\n          \"type\": \"accounts\"\n        }\n      },\n      \"category\": {\n        \"data\": {\n          \"id\": \"598c485dc54c8e0004f6651a\",\n          \"type\": \"categories\"\n        }\n      },\n      \"subcategory\": {\n        \"data\": {\n          \"id\": \"598c4898c54c8e0004f6651b\",\n          \"type\": \"subcategories\"\n        }\n      },\n      \"recurrence\": {\n        \"data\": {\n          \"id\": \"598c495fc54c8e0004f6651f\",\n          \"type\": \"recurrences\"\n        }\n      }\n    }\n  }\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "json",            "optional": false,            "field": "unauthorized",            "description": "<p>Authorization token is invalid, not provided or your access to this resource is not allowed.</p>"          }        ]      },      "examples": [        {          "title": "401 - Unauthorized error response body:",          "content": "HTTP/1.1 401 Unauthorized\n{\n  \"errors\": [\n    {\n      \"source\": {\n        \"pointer\": \"/data/attributes/<object>\"\n      },\n      \"detail\": \"Not Authorized\"\n    }\n  ]\n}",          "type": "json"        }      ]    }  },  {    "version": "1.0.0",    "type": "put",    "url": "/v1/transactions/:id",    "title": "Update transaction",    "name": "UpdateTransaction",    "group": "Transactions",    "permission": [      {        "name": "authenticated users only"      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "Id",            "description": "<p>Transaction id</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "description",            "description": "<p>Transaction description</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "price",            "description": "<p>Transaction price</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "date",            "description": "<p>Date Transaction date</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": true,            "field": "paid",            "description": "<p>=false Transaction status</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "note",            "description": "<p>Transaction notes</p>"          },          {            "group": "Parameter",            "type": "Object",            "optional": true,            "field": "recurrence",            "description": ""          },          {            "group": "Parameter",            "type": "String",            "allowedValues": [              "\"day\"",              "\"week\"",              "\"month\"",              "\"year\""            ],            "optional": false,            "field": "every",            "description": "<p>Period when recurrence occurs</p>"          },          {            "group": "Parameter",            "type": "String",            "allowedValues": [              "\"1..31\"",              "\"first\"",              "\"second\"",              "\"third\"",              "\"fourth\"",              "\"fifth\""            ],            "optional": true,            "field": "on",            "description": "<p>Day when recurrences occurs</p>"          },          {            "group": "Parameter",            "type": "String",            "allowedValues": [              "\"1..31\"",              "\"monthly\"",              "\"bimonthly\"",              "\"quarterly\"",              "\"semesterly\""            ],            "optional": true,            "field": "inteval",            "description": "<p>Interval when recurrences occurs</p>"          },          {            "group": "Parameter",            "type": "Number",            "optional": true,            "field": "repeat",            "description": "<p>Amount of times a recurrence should occurs</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "category_id",            "description": "<p>Category id of transaction</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": true,            "field": "subcategory_id",            "description": "<p>Subcategory id of transaction</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "account_id",            "description": "<p>Account id of transaction</p>"          }        ]      },      "examples": [        {          "title": "Request body example",          "content": "{\n  \"description\": \"Compras na quitanda\",\n  \"price\": -100.00,\n  \"date\": \"2017-07-27\",\n  \"paid\": true,\n  \"note\": \"Abastecimento da dispensa\"\n  \"recurrence\": {\n    \"every\": \"month\",\n    \"on\": 27,\n    \"interval\": \"monthly\",\n    \"repeat\": 100\n  },\n  \"category_id\": \"5984e907562a20000468442d\",\n  \"subcategory_id\": \"5984e907562a20000468442h\",\n  \"account_id\": \"5984ea9f562a20000468442f\"\n}",          "type": "json"        }      ]    },    "examples": [      {        "title": "Example usage:",        "content": "curl -i\n-X PUT\n-d '{<json data>}'\n-H 'CONTENT-TYPE: application/json'\n-H 'AUTHORIZATION: Bearer <token>'\nhttps://api.enriquece.me/transactions/<id>",        "type": "curl"      }    ],    "filename": "app/controllers/v1/transactions_controller.rb",    "groupTitle": "Transactions",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "string",            "optional": false,            "field": "content-type",            "description": "<p>The content type of request. Must always be filled with 'application/json'</p>"          },          {            "group": "Header",            "type": "string",            "optional": false,            "field": "Authorization",            "description": "<p>Authentication token of current user</p>"          }        ]      },      "examples": [        {          "title": "If you need an example of header, here you have it.",          "content": "Content-Type: application/json Authorization: Bearer <token>",          "type": "json"        }      ]    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "data",            "description": ""          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "data.id",            "description": "<p>Id of object in database</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "data.type",            "description": "<p>Describes the type of object</p>"          },          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "data.attributes",            "description": "<p>List attributes of an object</p>"          },          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "data.relationships",            "description": "<p>Array of objects with relationship info</p>"          },          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "data.relationships.obj",            "description": "<p>Object relationship</p>"          },          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "data.relationships.obj.data",            "description": "<p>Object relationship info</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "data.relationships.obj.data.id",            "description": "<p>Object id in database</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "data.relationships.obj.data.type",            "description": "<p>Object object type</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "description",            "description": "<p>data.attributes.description Transaction description</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "price",            "description": "<p>data.attributes.price Price Transaction price</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "date",            "description": "<p>data.attributes.date Date Transaction date</p>"          },          {            "group": "Success 200",            "type": "Boolean",            "optional": false,            "field": "paid",            "description": "<p>data.attributes.paid Paid Transaction status: true = paid, false = not paid</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "note",            "description": "<p>data.attributes.note Note Transaction notes</p>"          },          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "recurrence",            "description": "<p>data.attributes.recurrence</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "every",            "description": "<p>data.attributes.recurrence.every Period when recurrence occurs</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "on",            "description": "<p>data.attributes.recurrence.on Day when recurrences occurs</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "inteval",            "description": "<p>data.attributes.recurrence.interval Interval when recurrences occurs</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "repeat",            "description": "<p>data.attributes.recurrence.repeat Amount of times a recurrence should occurs</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "category_id",            "description": "<p>data.attributes.category_id Category id of transaction</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "subcategory_id",            "description": "<p>data.attributes.subcategory_id Subcategory id of transaction</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "account_id",            "description": "<p>data.attributes.account_id Account id of transaction</p>"          }        ]      },      "examples": [        {          "title": "Success response body:",          "content": "HTTP/1.1 200 OK\n{\n  \"data\": {\n    \"id\": \"598c495fc54c8e0004f6651e\",\n    \"type\": \"transaction\",\n    \"attributes\": {\n      \"description\": \"Compras na quitanda\",\n      \"price\": -100,\n      \"date\": \"2017-07-27\",\n      \"paid\": false,\n      \"note\": null\n    },\n    \"relationships\": {\n      \"account\": {\n        \"data\": {\n          \"id\": \"598c4936c54c8e0004f6651d\",\n          \"type\": \"accounts\"\n        }\n      },\n      \"category\": {\n        \"data\": {\n          \"id\": \"598c485dc54c8e0004f6651a\",\n          \"type\": \"categories\"\n        }\n      },\n      \"subcategory\": {\n        \"data\": {\n          \"id\": \"598c4898c54c8e0004f6651b\",\n          \"type\": \"subcategories\"\n        }\n      },\n      \"recurrence\": {\n        \"data\": {\n          \"id\": \"598c495fc54c8e0004f6651f\",\n          \"type\": \"recurrences\"\n        }\n      }\n    }\n  }\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "json",            "optional": false,            "field": "unauthorized",            "description": "<p>Authorization token is invalid, not provided or your access to this resource is not allowed.</p>"          },          {            "group": "Error 4xx",            "type": "json",            "optional": false,            "field": "unprocessable-entity",            "description": "<p>Params providaded in request body are invalid or supressed</p>"          }        ]      },      "examples": [        {          "title": "401 - Unauthorized error response body:",          "content": "HTTP/1.1 401 Unauthorized\n{\n  \"errors\": [\n    {\n      \"source\": {\n        \"pointer\": \"/data/attributes/<object>\"\n      },\n      \"detail\": \"Not Authorized\"\n    }\n  ]\n}",          "type": "json"        },        {          "title": "422 - Unprocessible Entity error response body:",          "content": "HTTP/1.1 422 Unprocessable Entity\n{\n  \"errors\": [\n    {\n      \"source\": {\n        \"pointer\": \"/data/attributes/<object>\"\n      },\n      \"detail\": \"<error message>\"\n    }\n  ]\n}",          "type": "json"        }      ]    }  },  {    "description": "<p>This end point is responsible for creating new users accounts. An user account is necessary to allow people to have access in another features in the application. The proccess of creating a new account is pretty simple and well described. In summary all you need to do is trigger a post request as explained below.</p>",    "version": "1.0.0",    "type": "post",    "url": "/v1/users",    "title": "Create user",    "name": "CreateUser",    "group": "Users",    "examples": [      {        "title": "Here is example of usage. Simple as it should be!",        "content": "Of course the data below is an example, so you already know that is\nnecessary replace them with yours.\n\ncurl -i\n-X POST\n-H 'CONTENT-TYPE: application/json'\n-d '{\"name\": \"John Doe\", \"email\": \"johndoe@email.com\", \"password\": \"123456\"}'\nhttps://api.enriquece.me/v1/users",        "type": "curl"      }    ],    "success": {      "examples": [        {          "title": "Here is an example of response when everithing is ok",          "content": "If you did everithing right congratulatuons! Your response must look like the\none bellow:\n\nHTTP/1.1 201 Created\n{\n  \"data\": {\n    \"id\": \"598c3c6ec54c8e0004f66519\",\n    \"type\": \"user\",\n    \"attributes\": {\n      \"name\": \"John Doe\",\n      \"email\": \"johndoe@enriquece.me\"\n    }\n  }\n}",          "type": "json"        },        {          "title": "Here is an example of response when everithing is ok",          "content": "If you did everithing right congratulatuons! Your response must look like the\none bellow:\n\nHTTP/1.1 200 OK\n{\n  \"data\": {\n    \"id\": \"598c3c6ec54c8e0004f66519\",\n    \"type\": \"user\",\n    \"attributes\": {\n      \"name\": \"John Doe\",\n      \"email\": \"johndoe@enriquece.me\"\n    }\n  }\n}",          "type": "json"        }      ],      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "data",            "description": ""          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "data.id",            "description": "<p>Id of object in database</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "data.type",            "description": "<p>Describes the type of object</p>"          },          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "data.attributes",            "description": "<p>List attributes of an object</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "data.attributes.name",            "description": "<p>User's full name</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "data.attributes.email",            "description": "<p>User's e-mail</p>"          }        ]      }    },    "filename": "app/controllers/v1/users_controller.rb",    "groupTitle": "Users",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Fill with user's full name</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "email",            "description": "<p>Fill with user's e-mail</p>"          },          {            "group": "Parameter",            "type": "String",            "size": "6..20",            "optional": false,            "field": "password",            "description": "<p>FIll with User's password</p>"          }        ]      },      "examples": [        {          "title": "Look at this example of json for user request body:",          "content": "You must be curious to see how a user request body looks like...\nDon't worry, here is an example:\n\n{\n  \"name\": \"John Doe\",\n  \"email\": \"johndoe@enriquece.me\",\n  \"password\": \"123456\"\n}",          "type": "json"        }      ]    },    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "string",            "optional": false,            "field": "content-type",            "description": "<p>This is the content type of request. This header must always be filled with 'application/json'</p>"          }        ]      },      "examples": [        {          "title": "If you need an example of header, here you have it.",          "content": "Content-Type: application/json",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "json",            "optional": false,            "field": "unauthorized",            "description": "<p>Authorization token is invalid, not provided or your access to this resource is not allowed.</p>"          },          {            "group": "Error 4xx",            "type": "json",            "optional": false,            "field": "unprocessable-entity",            "description": "<p>Params providaded in request body are invalid or supressed</p>"          }        ]      },      "examples": [        {          "title": "401 - Unauthorized error response body:",          "content": "HTTP/1.1 401 Unauthorized\n{\n  \"errors\": [\n    {\n      \"source\": {\n        \"pointer\": \"/data/attributes/<object>\"\n      },\n      \"detail\": \"Not Authorized\"\n    }\n  ]\n}",          "type": "json"        },        {          "title": "422 - Unprocessible Entity error response body:",          "content": "HTTP/1.1 422 Unprocessable Entity\n{\n  \"errors\": [\n    {\n      \"source\": {\n        \"pointer\": \"/data/attributes/<object>\"\n      },\n      \"detail\": \"<error message>\"\n    }\n  ]\n}",          "type": "json"        }      ]    }  },  {    "description": "<p>Trying to remove a user? You are in the right place, despite the enormous sadness we feel when an account is closed. If that's what you want to do (please be fooled) come on! The process is simple and well documented. All you have to do is to send a delete request informing the user token in the authorization header. You may want to take a look at the authentication part of this documentation if you are not remembering what the user's token is.</p>",    "version": "1.0.0",    "type": "delete",    "url": "/v1/user",    "title": "Delete user",    "name": "DeleteUser",    "group": "Users",    "permission": [      {        "name": "authenticated users only"      }    ],    "examples": [      {        "title": "Needing that naughty example? We never ever disappoint you!",        "content": "Are you seeing the <token> key down there? It means you need to replace it\nwith a valid token. Maybe you still do not know what a token is, and there's\nno problem with that. Make hot chocolate and drink while taking a look at the\nauthentication section of this documentation. Cheers!\n\ncurl -i\n-X DELETE\n-H 'CONTENT-TYPE: application/json'\n-H 'AUTHORIZATION: Bearer <token>'\nhttps://api.enriquece.me/user",        "type": "curl"      }    ],    "success": {      "examples": [        {          "title": "204 No content",          "content": "I'm so sorry about seeing you leave. I don't wanna talk anymore.\nNo way, I was just kidding! No regrets between us. It's only an empty response\nbody. This is all, hope see you latter!\n\nHTTP/1.1 204 No Content",          "type": "json"        }      ]    },    "filename": "app/controllers/v1/users_controller.rb",    "groupTitle": "Users",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "string",            "optional": false,            "field": "content-type",            "description": "<p>The content type of request. Must always be filled with 'application/json'</p>"          },          {            "group": "Header",            "type": "string",            "optional": false,            "field": "Authorization",            "description": "<p>Authentication token of current user</p>"          }        ]      },      "examples": [        {          "title": "If you need an example of header, here you have it.",          "content": "Content-Type: application/json Authorization: Bearer <token>",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "json",            "optional": false,            "field": "unauthorized",            "description": "<p>Authorization token is invalid, not provided or your access to this resource is not allowed.</p>"          }        ]      },      "examples": [        {          "title": "401 - Unauthorized error response body:",          "content": "HTTP/1.1 401 Unauthorized\n{\n  \"errors\": [\n    {\n      \"source\": {\n        \"pointer\": \"/data/attributes/<object>\"\n      },\n      \"detail\": \"Not Authorized\"\n    }\n  ]\n}",          "type": "json"        }      ]    }  },  {    "description": "<p>This end point is responsible for showing users informations. It shows data about the user authenticated over the token provided in the request headers. The proccess to obtain that data is pretty simple and well described. In summary all you need to do is trigger a get request as explained below.</p>",    "version": "1.0.0",    "type": "get",    "url": "/v1/user",    "title": "Show user",    "name": "ShowUser",    "group": "Users",    "permission": [      {        "name": "authenticated users only"      }    ],    "examples": [      {        "title": "Needing an example big boy? Here we go!",        "content": "Just don't forget of replacing the <token> key with a valid token ok?\nMaybe you can be asking yourself at this point: What f*** is a token? In that\ncase don't worry, go ahead and take a look in the authentication section of\nour documentation.\n\ncurl -i\n-H 'CONTENT-TYPE: application/json'\n-H 'AUTHORIZATION: Bearer <token>'\nhttps://api.enriquece.me/user",        "type": "curl"      }    ],    "filename": "app/controllers/v1/users_controller.rb",    "groupTitle": "Users",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "string",            "optional": false,            "field": "content-type",            "description": "<p>The content type of request. Must always be filled with 'application/json'</p>"          },          {            "group": "Header",            "type": "string",            "optional": false,            "field": "Authorization",            "description": "<p>Authentication token of current user</p>"          }        ]      },      "examples": [        {          "title": "If you need an example of header, here you have it.",          "content": "Content-Type: application/json Authorization: Bearer <token>",          "type": "json"        }      ]    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "data",            "description": ""          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "data.id",            "description": "<p>Id of object in database</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "data.type",            "description": "<p>Describes the type of object</p>"          },          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "data.attributes",            "description": "<p>List attributes of an object</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "data.attributes.name",            "description": "<p>User's full name</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "data.attributes.email",            "description": "<p>User's e-mail</p>"          }        ]      },      "examples": [        {          "title": "Here is an example of response when everithing is ok",          "content": "If you did everithing right congratulatuons! Your response must look like the\none bellow:\n\nHTTP/1.1 200 OK\n{\n  \"data\": {\n    \"id\": \"598c3c6ec54c8e0004f66519\",\n    \"type\": \"user\",\n    \"attributes\": {\n      \"name\": \"John Doe\",\n      \"email\": \"johndoe@enriquece.me\"\n    }\n  }\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "json",            "optional": false,            "field": "unauthorized",            "description": "<p>Authorization token is invalid, not provided or your access to this resource is not allowed.</p>"          }        ]      },      "examples": [        {          "title": "401 - Unauthorized error response body:",          "content": "HTTP/1.1 401 Unauthorized\n{\n  \"errors\": [\n    {\n      \"source\": {\n        \"pointer\": \"/data/attributes/<object>\"\n      },\n      \"detail\": \"Not Authorized\"\n    }\n  ]\n}",          "type": "json"        }      ]    }  },  {    "description": "<p>As you could imagine, this end point is responsable for update user data. It changes data related to the user provided in authorization header and is totaly depending on authentication (I know that you you knew that but I'm here just to rememeber). Don't feel bad if you have no idea about how user authentication works. You can always go ahead and take a look at authorization section of this documentation. Don't be shy!</p>",    "version": "1.0.0",    "type": "put",    "url": "/v1/user",    "title": "Update user",    "name": "UpdateUser",    "group": "Users",    "permission": [      {        "name": "authenticated users only"      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "Id",            "description": "<p>User id</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Fill with user's full name</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "email",            "description": "<p>Fill with user's e-mail</p>"          },          {            "group": "Parameter",            "type": "String",            "size": "6..20",            "optional": false,            "field": "password",            "description": "<p>FIll with User's password</p>"          }        ]      },      "examples": [        {          "title": "Look at this example of json for user request body:",          "content": "You must be curious to see how a user request body looks like...\nDon't worry, here is an example:\n\n{\n  \"name\": \"John Doe\",\n  \"email\": \"johndoe@enriquece.me\",\n  \"password\": \"123456\"\n}",          "type": "json"        }      ]    },    "examples": [      {        "title": "I knew that you was waiting for it... Enjoy this example!",        "content": "In case of memory lapse, remember that this is an example and you have to\nreplace the <token> key and the values in JSON as well.\n\ncurl -i\n-X PUT\n-H 'CONTENT-TYPE: application/json'\n-H 'AUTHORIZATION: Bearer <token>'\n-d '{\"name\": \"John Doe\", \"email\": \"johndoe@email.com\", \"password\": \"123456\"}'\nhttps://api.enriquece.me/user",        "type": "curl"      }    ],    "filename": "app/controllers/v1/users_controller.rb",    "groupTitle": "Users",    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "string",            "optional": false,            "field": "content-type",            "description": "<p>The content type of request. Must always be filled with 'application/json'</p>"          },          {            "group": "Header",            "type": "string",            "optional": false,            "field": "Authorization",            "description": "<p>Authentication token of current user</p>"          }        ]      },      "examples": [        {          "title": "If you need an example of header, here you have it.",          "content": "Content-Type: application/json Authorization: Bearer <token>",          "type": "json"        }      ]    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "data",            "description": ""          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "data.id",            "description": "<p>Id of object in database</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "data.type",            "description": "<p>Describes the type of object</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "data.attributes.name",            "description": "<p>User's full name</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "data.attributes.email",            "description": "<p>User's e-mail</p>"          }        ]      },      "examples": [        {          "title": "Here is an example of response when everithing is ok",          "content": "If you did everithing right congratulatuons! Your response must look like the\none bellow:\n\nHTTP/1.1 200 OK\n{\n  \"data\": {\n    \"id\": \"598c3c6ec54c8e0004f66519\",\n    \"type\": \"user\",\n    \"attributes\": {\n      \"name\": \"John Doe\",\n      \"email\": \"johndoe@enriquece.me\"\n    }\n  }\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "json",            "optional": false,            "field": "unauthorized",            "description": "<p>Authorization token is invalid, not provided or your access to this resource is not allowed.</p>"          },          {            "group": "Error 4xx",            "type": "json",            "optional": false,            "field": "unprocessable-entity",            "description": "<p>Params providaded in request body are invalid or supressed</p>"          }        ]      },      "examples": [        {          "title": "401 - Unauthorized error response body:",          "content": "HTTP/1.1 401 Unauthorized\n{\n  \"errors\": [\n    {\n      \"source\": {\n        \"pointer\": \"/data/attributes/<object>\"\n      },\n      \"detail\": \"Not Authorized\"\n    }\n  ]\n}",          "type": "json"        },        {          "title": "422 - Unprocessible Entity error response body:",          "content": "HTTP/1.1 422 Unprocessable Entity\n{\n  \"errors\": [\n    {\n      \"source\": {\n        \"pointer\": \"/data/attributes/<object>\"\n      },\n      \"detail\": \"<error message>\"\n    }\n  ]\n}",          "type": "json"        }      ]    }  }]
